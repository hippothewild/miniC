package Example;

import java_cup.runtime.*;

parser code {:
	public static void main(String args[]) throws Exception {
		new parser(new Yylex(System.in)).parse();
	}
:}

/* Parenthesis and Brackets. */
terminal LPAREN, RPAREN, LBRACKET, RBRACKET, LSQBRACKET, RSQBRACKET;

/* Operators and Assigner. */
terminal PLUS, MINUS, TIMES, DIVIDE, ASSIGN, UNOP;

/* Comparer. */
terminal LESS, GREATER, LESS_EQ, GREATER_EQ, EQ, NOT_EQ;

/* Tokens. */
terminal TOKEN_INT, TOKEN_FLOAT, TOKEN_RETURN, TOKEN_WHILE, TOKEN_FOR, TOKEN_IF, TOKEN_SWITCH, TOKEN_CASE, TOKEN_BREAK, TOKEN_DEFAULT;

/* Miscellaneous. */
terminal SEMI, COMMA, NOT;

/* Types. */
terminal String		IDENT;
terminal Float		FLOAT_NUM;
terminal Integer	INT_NUM;

/* Non-terminal program rules. */
non terminal Program		program;
non terminal DeclList		declList;
non terminal FuncList		funcList;
non terminal Declaration	declaration;
non terminal IdentList		identList;
non terminal Identifier		identifier;
non terminal Function		function;
non terminal ParamList      paramList;
non terminal Type           type;
non terminal CompoundStmt	compountStmt;
non terminal StmtList		stmtList;
non terminal Stmt			stmt;
non terminal AssignStmt		assignStmt;
non terminal Assign			assign;
non terminal CallStmt		callStmt;
non terminal Call			call;
non terminal RetStmt		retStmt;
non terminal WhileStmt		whileStmt;
non terminal ForStmt		forStmt;
non terminal IfStmt			ifStmt;
non terminal SwitchStmt		switchStmt;
non terminal CaseList		caseList;
non terminal Expr			expr;
non terminal ArgList		argList;

precedence left LPAREN, RPAREN;
precedence right UNOP;
precedence left TIMES, DIVIDE;
precedence left PLUS, MINUS;
precedence left GREATER, LESS, GREATER_EQ, LESS_EQ;
precedence left EQ, NOT_EQ;
precedence right ASSIGN;
